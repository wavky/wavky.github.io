<template name="remu" value="remember { mutableStateOf($PARAM$) }" description="remember mutableStateOf" toReformat="false" toShortenFQNames="true">
  <variable name="PARAM" expression="" defaultValue="" alwaysStopAt="true" />
  <context>
    <option name="KOTLIN_EXPRESSION" value="true" />
    <option name="KOTLIN_STATEMENT" value="true" />
  </context>
</template>


<template name="modi" value="modifier = modifier" description="modifier = modifier" toReformat="false" toShortenFQNames="true">
  <context>
    <option name="KOTLIN_EXPRESSION" value="true" />
  </context>
</template>


<template name="compre" value="@androidx.compose.runtime.Composable&#10;fun $NAME$(&#10;  modifier: androidx.compose.ui.Modifier = androidx.compose.ui.Modifier&#10;) {&#10;  $END$&#10;}&#10;&#10;@androidx.compose.ui.tooling.preview.Preview(showBackground = true)&#10;@androidx.compose.runtime.Composable&#10;private fun Preview$NAME$() {&#10;  $NAME$(&#10;    modifier = androidx.compose.ui.Modifier&#10;  )&#10;}&#10;" description="Create @Composable and Preview" toReformat="true" toShortenFQNames="true">
  <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
  <context>
    <option name="COMPOSE_KOTLIN" value="true" />
    <option name="COMPOSE_KOTLIN_COMMENT" value="false" />
  </context>
</template>


<template name="compre filename" value="@androidx.compose.runtime.Composable&#10;fun $FILENAME$(&#10;  modifier: androidx.compose.ui.Modifier = androidx.compose.ui.Modifier&#10;) {&#10;  $END$&#10;}&#10;&#10;@androidx.compose.ui.tooling.preview.Preview(showBackground = true)&#10;@androidx.compose.runtime.Composable&#10;private fun Preview$FILENAME$() {&#10;  $FILENAME$(&#10;    modifier = androidx.compose.ui.Modifier&#10;  )&#10;}&#10;" description="Create @Composable and Preview with filename" toReformat="true" toShortenFQNames="true">
  <variable name="FILENAME" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="true" />
  <context>
    <option name="COMPOSE_KOTLIN" value="true" />
    <option name="COMPOSE_KOTLIN_COMMENT" value="false" />
  </context>
</template>


<template name="screen" value="@androidx.compose.runtime.Composable&#10;fun $NAME$Screen(modifier: androidx.compose.ui.Modifier = androidx.compose.ui.Modifier, viewModel: $NAME$ViewModel = org.koin.androidx.compose.koinViewModel()) {&#10;  $NAME$ScreenContent(modifier, viewModel)&#10;}&#10;&#10;@androidx.compose.runtime.Composable&#10;fun $NAME$ScreenContent(&#10;  modifier: androidx.compose.ui.Modifier = androidx.compose.ui.Modifier,&#10;  viewModel: $NAME$ViewModelFunc&#10;) {&#10;&#10;  $END$&#10;&#10;  //region Dialogs&#10;&#10;  //endregion&#10;}&#10;&#10;@androidx.compose.ui.tooling.preview.Preview(showBackground = true)&#10;@androidx.compose.runtime.Composable&#10;private fun Preview$NAME$Screen() {&#10;  $NAME$ScreenContent(&#10;    viewModel = object : $NAME$ViewModelFunc {&#10;    },&#10;    modifier = androidx.compose.ui.Modifier&#10;  )&#10;}&#10;" description="Create @Composable screen" toReformat="true" toShortenFQNames="true">
  <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
  <context>
    <option name="COMPOSE_KOTLIN_TOP_LEVEL" value="true" />
  </context>
</template>


<template name="screen filename" value="@androidx.compose.runtime.Composable&#10;fun $FILENAME$(modifier: androidx.compose.ui.Modifier = androidx.compose.ui.Modifier, viewModel: $FILENAME$ViewModel = org.koin.androidx.compose.koinViewModel()) {&#10;  $FILENAME$Content(modifier, viewModel)&#10;}&#10;&#10;@androidx.compose.runtime.Composable&#10;fun $FILENAME$Content(&#10;  modifier: androidx.compose.ui.Modifier = androidx.compose.ui.Modifier,&#10;  viewModel: $FILENAME$ViewModelFunc&#10;) {&#10;&#10;  $END$&#10;&#10;  //region Dialogs&#10;&#10;  //endregion&#10;}&#10;&#10;@androidx.compose.ui.tooling.preview.Preview(showBackground = true)&#10;@androidx.compose.runtime.Composable&#10;private fun Preview$FILENAME$() {&#10;  $FILENAME$Content(&#10;    viewModel = object : $FILENAME$ViewModelFunc {&#10;    },&#10;    modifier = androidx.compose.ui.Modifier&#10;  )&#10;}&#10;" description="Create @Composable screen with filename" toReformat="true" toShortenFQNames="true">
  <variable name="FILENAME" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="true" />
  <context>
    <option name="COMPOSE_KOTLIN_TOP_LEVEL" value="true" />
  </context>
</template>